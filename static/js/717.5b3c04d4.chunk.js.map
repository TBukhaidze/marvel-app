{"version":3,"file":"static/js/717.5b3c04d4.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMesssage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMesssage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const respone = await fetch(url, { method, body, headers });\r\n\r\n        if (!respone.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${respone.status}`);\r\n        }\r\n\r\n        const data = await respone.json();\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { loading, error, request, clearError };\r\n};\r\n","// aq ar vwert arc imports arc extends radganac amas\r\n// araferi chird. reactisgan da daiwereba native Js enaze\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=8243f614e11c544c35d603e3433fc12e\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: `https://www.marvel.com/characters/${char.name}`,\r\n      wiki: `https://en.wikipedia.org/wiki/${char.name}_(Marvel_Comics)`,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","ComicsList","comicsList","setComicsList","useState","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","respone","fetch","ok","Error","status","data","json","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","path","extension","homepage","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacterByName","getCharacter","res","getComic"],"sourceRoot":""}