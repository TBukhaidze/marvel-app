{"version":3,"file":"static/js/871.125d70fd.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMesssage/ErrorMessage.js","components/pages/SinglePage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMesssage/ErrorMessage\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const { loading, error, getComic, getCharacter, clearError } =\r\n    useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [id]);\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n\r\n    switch (dataType) {\r\n      case \"comic\":\r\n        getComic(id).then(onDataLoaded);\r\n        break;\r\n      case \"character\":\r\n        getCharacter(id).then(onDataLoaded);\r\n    }\r\n  };\r\n\r\n  const onDataLoaded = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !data) ? (\r\n    <Component data={data} />\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePage;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const respone = await fetch(url, { method, body, headers });\r\n\r\n        if (!respone.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${respone.status}`);\r\n        }\r\n\r\n        const data = await respone.json();\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { loading, error, request, clearError };\r\n};\r\n","// aq ar vwert arc imports arc extends radganac amas\r\n// araferi chird. reactisgan da daiwereba native Js enaze\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=8243f614e11c544c35d603e3433fc12e\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: `https://www.marvel.com/characters/${char.name}`,\r\n      wiki: `https://en.wikipedia.org/wiki/${char.name}_(Marvel_Comics)`,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","_ref","Component","dataType","id","useParams","data","setData","useState","loading","error","getComic","getCharacter","clearError","useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment","request","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","respone","fetch","ok","Error","concat","status","json","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","thumbnail","path","extension","homepage","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","results","map","getCharacterByName","res","getAllComics"],"sourceRoot":""}